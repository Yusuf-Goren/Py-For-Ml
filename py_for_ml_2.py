# -*- coding: utf-8 -*-
"""PY for ML 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mQ6dAc8jGKjUsdK9BfZuarV90cqJXCzu
"""

import pandas as pd
import numpy as np
import csv
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("car data.csv",encoding='latin1')

df.head(100)

"""If there is an null value this function will return True

---
df.isna().all()
df.notna().any()
"""

df.isna().any()

df.notna().sum()

df["New"] = [1 if x < 20000 else 0 for x in df.Kms_Driven ]

"""You can add new columns with one line loop"""

df.head()

"""> Scatter plot : iki değişken arasındaki ilişkinin dağlımını veri noktalartıyla gösterir.
> Lineplot: İki değikşen arasındaki ilişkiyi sürekli gösterir. Veri noktaları birbirlerine çizgilerle bağlıdır.
"""

plt.scatter(df.Year,df.Selling_Price, c=df.New,s=389,alpha=0.2,cmap="viridis")
plt.colorbar()
plt.xlabel("Year")
plt.ylabel("Selling Price")
plt.title("Relationship between Year and Selling Price")
plt.show()

"""df.Year x ekseni
df.Selling_Price y ekseni
c = 3.değişken
alpha = markerların transparanlığı
cmap = renk pleti
s= markerın boyutu
"""

fig, ax =plt.subplots()
ax.scatter(df.Year, df.Selling_Price, c=df.New, cmap="viridis")
ax.set_xlabel("Year")
ax.set_ylabel("Selling Price")
ax.set_title("Relationship between Year And Selling Price")
plt.show()

"""Histogram:Numerik ya da kategorik verilerde dağılımını yorumlamamıza yardımcı olur."""

# bins = [2004,2008,2012,2016,2020]
fig, ax = plt.subplots()
ax.hist(df.Year, label="Year", bins=15)
ax.set_xlabel("Year")
ax.set_ylabel("Number of Observaitons")
ax.set_xticklabels(df.Year, rotation = 90 ) #Yazılar birbirine giriyorsa daha okunaklı olması için kullanılır
plt.show()
fig.savefig("Year.png")

"""**Seaborn**
> AxesSubplot

> FaceGrid
"""

sns.set_palette("RdBu")
sns.countplot(x="Year", data = df)
plt.show()

sns.catplot(x="Year", aspect=3 , data = df , kind="count")
plt.show()

g = sns.catplot(x="Year", aspect=3 , data = df , kind="count")
g.fig.suptitle("Year Counts", y=1)
plt.xticks(rotation = 90)
plt.show()

sns.scatterplot(x="Year" , y="Selling_Price", data= df, hue="New")
plt.show()

sns.relplot(x="Year" , y="Selling_Price", data= df, hue="New", kind="scatter")
plt.show()

"""**LINE PLOT**"""

sns.relplot(x="Year", y="Selling_Price", data=df, kind="line", aspect=4, ci=None, markers=True, dashes=False)
plt.show()

sns.relplot(x="Year", y="Selling_Price", data=df, kind="scatter", row="New")
plt.show()

"""**Heatmap**"""

sns.set_palette("RdBu")
correlation = df.corr()
sns.heatmap(correlation, annot=True)
plt.show()

"""**Categorical Plots**"""

sns.catplot(x="New", y="Selling_Price",data=df, kind="bar")

sns.set_context("")
sns.set_palette("RdBu_r")
sns.catplot(x="New", y="Year", data=df,kind="box")
plt.show()
# categorical plotlarda "RdBu", "PRGn_r", "PRGn_r"
# continuous plotlarda Greys, Blues, PuRd, GnBu

sns.set_context("paper")